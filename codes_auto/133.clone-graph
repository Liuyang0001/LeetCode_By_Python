#
# @lc app=leetcode.cn id=133 lang=Python3
#
# [133] clone-graph
#
"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = []):
        self.val = val
        self.neighbors = neighbors
"""

class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        visited = {} # 访问数组

        def dfs(node):
            #print(node.val)
            if not node: return
            if node in visited:
                return visited[node]
            clone = Node(node.val, [])
            visited[node] = clone
            for n in node.neighbors:
                clone.neighbors.append(dfs(n))
            return clone

        return dfs(node)
# @lc code=end
#
# @lc app=leetcode.cn id=17 lang=Python3
#
# [17] letter-combinations-of-a-phone-number
#
class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if not digits: return []
        res = []
        n = len(digits)
        dic = {
            '2':'abc',
            '3':'def',
            '4':'ghi',
            '5':'jkl',
            '6':'mno',
            '7':'pqrs',
            '8':'tuv',
            '9':'wxyz'
        }

        def backtrack(ind,tem):
            if ind==n:
                res.append(tem)
                return
            for i in dic[digits[ind]]:
                backtrack(ind+1,tem+i)
        
        backtrack(0,'')
        return res
# @lc code=end